<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:cache="http://www.springframework.org/schema/cache" xmlns:c="http://www.springframework.org/schema/c"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:p="http://www.springframework.org/schema/p"
	xmlns:context="http://www.springframework.org/schema/context"
	xsi:schemaLocation=" 
        http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
        http://www.springframework.org/schema/cache http://www.springframework.org/schema/cache/spring-cache.xsd">

	<!-- scanner redis properties -->
	<!-- <context:property-placeholder location="classpath:redis.properties" /> -->
    <cache:annotation-driven cache-manager="cacheManager"/>  
	<!--<bean id="poolConfig" class="redis.clients.jedis.JedisPoolConfig"> 
		<property name="maxIdle" value="${redis.maxIdle}" /> <property name="maxTotal" 
		value="${redis.maxActive}" /> <property name="maxWaitMillis" value="${redis.maxWait}" 
		/> <property name="testOnBorrow" value="${redis.testOnBorrow}" /> </bean> 
		<bean id="connectionFactory" class="org.springframework.data.redis.connection.jedis.JedisConnectionFactory" 
		p:host-name="${redis.host}" p:port="${redis.port}" p:password="${redis.pass}" 
		p:pool-config-ref="poolConfig" /> -->
	<!-- 
		  依赖注入的方式 constructor-arg：通过构造函数注入
		 property:通过setXX方法注入
    -->
	<bean id="jedisConnectionFactory"
		class="org.springframework.data.redis.connection.jedis.JedisConnectionFactory"
		p:host-name="127.0.0.1" p:port="6379" p:use-pool="true" p:database="1"/>
	<bean id="redisTemplate" class="org.springframework.data.redis.core.RedisTemplate"
		p:connection-factory-ref="jedisConnectionFactory" />
	<bean id="cacheManager" class="org.springframework.data.redis.cache.RedisCacheManager">
		<constructor-arg index="0" ref="redisTemplate"></constructor-arg>
	</bean>
</beans>			   