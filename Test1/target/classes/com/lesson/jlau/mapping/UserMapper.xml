<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.lesson.jlau.dao.UserMapper" >
<!--全局缓存 <cache type="com.lesson.jlau.redis.MybatisRedisCache" />  -->
  <resultMap id="User" type="com.lesson.jlau.bean.User" >
    <id column="id" property="id" jdbcType="BIGINT" />
    <result column="username" property="username" jdbcType="VARCHAR" />
    <result column="password" property="password" jdbcType="CHAR" />
    <result column="state" property="state" jdbcType="VARCHAR" />
    <result column="create_time" property="createTime" jdbcType="TIMESTAMP" />
  </resultMap>
  <resultMap id="UserRolePermission" type="com.lesson.jlau.bean.User" extends="User">
	  <collection property="permissions" ofType="com.lesson.jlau.bean.Permission">
		<id column="id" property="id" jdbcType="BIGINT" />
	    <result column="permission_name" property="permissionName" jdbcType="VARCHAR" />
	    <result column="permission_sign" property="permissionSign" jdbcType="VARCHAR" />
	    <result column="description" property="description" jdbcType="VARCHAR" /> 
	  </collection>
	  <collection property="roles" ofType="com.lesson.jlau.bean.Role" >
	  	<id column="id" property="id" jdbcType="BIGINT" />
	    <result column="role_name" property="roleName" jdbcType="VARCHAR" />
	    <result column="role_sign" property="roleSign" jdbcType="VARCHAR" />
	    <result column="description" property="description" jdbcType="VARCHAR" />
	  </collection>
  </resultMap>
  <sql id="Base_Column_List" >
    id, username, password, state, create_time
  </sql>
  
  <select id="selectByPrimaryKey" resultMap="User" parameterType="java.lang.Long" >
    select 
    <include refid="Base_Column_List" />
    from user
    where id = #{id,jdbcType=BIGINT}
  </select>
  
   <select id="getUsers" resultMap="User" parameterType="java.lang.Long" >
    select 
  	<include refid="Base_Column_List" />
    from user
    order by create_time limit 100 
  </select>
  <select id="getUserId" resultType="java.lang.Long" parameterType="java.lang.Long" >
    select 
  	id
    from user
    order by create_time limit 100 
  </select>
  <select id="selectRolePermission" resultMap="UserRolePermission" parameterType="java.lang.String" >
    select 
    u.*,r.*,p.*
    from user u 
    left join user_role ur on u.id=ur.user_id
    left join role r on r.id=ur.role_id
    left join role_permission rp on rp.role_id=r.id
    left join permission p on p.id=rp.permission_id
    where username = #{username,jdbcType=VARCHAR}
  </select>
  
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Long" >
    delete from user
    where id = #{id,jdbcType=BIGINT}
  </delete>
  <insert id="insert" parameterType="com.lesson.jlau.bean.User" >
    insert into user (id, username, password, 
      state, create_time)
    values (#{id,jdbcType=BIGINT}, #{username,jdbcType=VARCHAR}, #{password,jdbcType=CHAR}, 
      #{state,jdbcType=VARCHAR}, #{createTime,jdbcType=TIMESTAMP})
  </insert>
  <insert id="insertSelective" parameterType="com.lesson.jlau.bean.User" >
    insert into user
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        id,
      </if>
      <if test="username != null" >
        username,
      </if>
      <if test="password != null" >
        password,
      </if>
      <if test="state != null" >
        state,
      </if>
      <if test="createTime != null" >
        create_time,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        #{id,jdbcType=BIGINT},
      </if>
      <if test="username != null" >
        #{username,jdbcType=VARCHAR},
      </if>
      <if test="password != null" >
        #{password,jdbcType=CHAR},
      </if>
      <if test="state != null" >
        #{state,jdbcType=VARCHAR},
      </if>
      <if test="createTime != null" >
        #{createTime,jdbcType=TIMESTAMP},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.lesson.jlau.bean.User" >
    update user
    <set >
      <if test="username != null" >
        username = #{username,jdbcType=VARCHAR},
      </if>
      <if test="password != null" >
        password = #{password,jdbcType=CHAR},
      </if>
      <if test="state != null" >
        state = #{state,jdbcType=VARCHAR},
      </if>
      <if test="createTime != null" >
        create_time = #{createTime,jdbcType=TIMESTAMP},
      </if>
    </set>
    where id = #{id,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.lesson.jlau.bean.User" >
    update user
    set username = #{username,jdbcType=VARCHAR},
      password = #{password,jdbcType=CHAR},
      state = #{state,jdbcType=VARCHAR},
      create_time = #{createTime,jdbcType=TIMESTAMP}
    where id = #{id,jdbcType=BIGINT}
  </update>
</mapper>